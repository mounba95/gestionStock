<?php

namespace Proxies\__CG__\Novatech\StockBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Stock extends \Novatech\StockBundle\Entity\Stock implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'id', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'quantiteProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'limiteProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'prixProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'datePermptionProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'dateOperation', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'produit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'user', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'stockFournisseur', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'achat'];
        }

        return ['__isInitialized__', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'id', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'quantiteProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'limiteProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'prixProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'datePermptionProduit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'dateOperation', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'produit', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'user', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'stockFournisseur', '' . "\0" . 'Novatech\\StockBundle\\Entity\\Stock' . "\0" . 'achat'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Stock $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantiteProduit($quantiteProduit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantiteProduit', [$quantiteProduit]);

        return parent::setQuantiteProduit($quantiteProduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantiteProduit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantiteProduit', []);

        return parent::getQuantiteProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setLimiteProduit($limiteProduit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLimiteProduit', [$limiteProduit]);

        return parent::setLimiteProduit($limiteProduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLimiteProduit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLimiteProduit', []);

        return parent::getLimiteProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixProduit($prixProduit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixProduit', [$prixProduit]);

        return parent::setPrixProduit($prixProduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixProduit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixProduit', []);

        return parent::getPrixProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePermptionProduit($datePermptionProduit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePermptionProduit', [$datePermptionProduit]);

        return parent::setDatePermptionProduit($datePermptionProduit);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePermptionProduit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePermptionProduit', []);

        return parent::getDatePermptionProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOperation($dateOperation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOperation', [$dateOperation]);

        return parent::setDateOperation($dateOperation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOperation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOperation', []);

        return parent::getDateOperation();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduit(\Novatech\ProduitBundle\Entity\Produit $produit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduit', [$produit]);

        return parent::setProduit($produit);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduit', []);

        return parent::getProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\userManagerBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
