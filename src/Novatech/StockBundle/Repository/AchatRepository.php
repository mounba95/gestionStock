<?php

namespace Novatech\StockBundle\Repository;

/**
 * AchatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AchatRepository extends \Doctrine\ORM\EntityRepository
{
	public function getProduitAchat($idFacture)
    {


        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $query = $queryBuilder
            ->select('a.id','a.quantiteAchat','a.prixAchat as prixProduit', 'p.nomProduit', 's.id as idStock')
            ->from ('StockBundle:Achat','a')
            ->innerJoin('a.facture', 'f')
            ->innerJoin('a.stock', 's')
            ->innerJoin('s.produit', 'p')
            ->where('f.id = :id')
            ->setParameter('id',$idFacture)
            ->orderBy('a.id', "DESC")
        ;

        return $query
            ->getQuery()
            ->getResult()
            ;
    }


    public function existAchat($idFacture, $idStock)
    {


        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $query = $queryBuilder
            ->select('a.id','a.quantiteAchat','a.prixAchat as prixProduit', 'p.nomProduit')
            ->from ('StockBundle:Achat','a')
            ->innerJoin('a.facture', 'f')
            ->innerJoin('a.stock', 's')
            ->innerJoin('s.produit', 'p')
            ->where('f.id = :id and s.id = :idStock')
            ->setParameter('id',$idFacture)
            ->setParameter('idStock',$idStock)
            ->orderBy('a.id', "DESC")
        ;

        return $query
            ->getQuery()
            ->getResult()
            ;
    }

    public function getAchatByIdStockAndIdFacture($idFacture, $idStock)
    {


        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $query = $queryBuilder
            ->select('a.id as idAchat')
            ->from ('StockBundle:Achat','a')
            ->innerJoin('a.facture', 'f')
            ->innerJoin('a.stock', 's')
            ->innerJoin('s.produit', 'p')
            ->where('f.id = :id and s.id = :idStock')
            ->setParameter('id',$idFacture)
            ->setParameter('idStock',$idStock)
            ->orderBy('a.id', "DESC")
        ;

        return $query
            ->getQuery()
            ->getResult()
            ;
    }

}
